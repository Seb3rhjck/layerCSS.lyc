{
  "title": "LayerCSS .lyc",
  "language-selector-label": "Select Language:",
  "header-title": "LayerCSS Documentation",
  "header-license": "License: Apache 2.0",
  "introduction-title": "1. Introduction",
  "introduction-description": "<strong>What is LayerCSS?</strong> LayerCSS is a design language based on CSS that introduces advanced features to facilitate the creation of modular, reusable, and maintainable styles. It is designed to overcome the limitations of traditional CSS by adding support for global and local variables, nested blocks, layers (@layer), and structured comments.",
  "introduction-quote": "Modularity: Divide your styles into logical sections.<br>Reusability: Define values once and use them in multiple places.<br>Ease of Maintenance: Change a value in one place and affect the entire project.",
  "introduction-creator": "<em>Creator:</em> Sebastian (Balthier) Ordo√±ez Arias, an amateur programmer with basic knowledge in web design and application development. This project was born as a personal exploration to simplify CSS development and make it accessible to everyone.",
  "lyc-title": "2. What is .lyc?",
  "lyc-description": "The `.lyc` file format is the core of LayerCSS. It extends traditional CSS by introducing new syntax and features that make styling more intuitive and efficient. Here are some key aspects:",
  "lyc-feature-syntax": "<strong>Syntax:</strong> Similar to CSS but with added features like variables, nesting, and layers.",
  "lyc-feature-modularity": "<strong>Modularity:</strong> Organize your styles into reusable components.",
  "lyc-feature-compilation": "<strong>Compilation:</strong> `.lyc` files are compiled into standard CSS for browser compatibility.",
  "features-title": "3. Key Features",
  "feature-global-variables": "<strong>Global and Local Variables:</strong> Define reusable values like colors and font sizes.",
  "feature-nested-blocks": "<strong>Nested Blocks:</strong> Write styles hierarchically for better readability.",
  "feature-layers": "<strong>Layers (@layer):</strong> Organize styles into logical sections.",
  "feature-comments": "<strong>Structured Comments:</strong> Use single-line and multi-line comments for documentation.",
  "feature-animations": "<strong>Animations and Keyframes:</strong> Simplify dynamic visual effects.",
  "use-case-title": "4. Real-World Use Case",
  "use-case-description": "A corporate website can use LayerCSS to organize styles into layers for base, components, and utilities. This modular approach allows developers to work on different parts of the project without interfering with each other.",
  "comparison-title": "5. Comparison with Modern Frameworks",
  "comparison-header-feature": "Feature",
  "comparison-header-tailwind": "Tailwind CSS",
  "comparison-header-bootstrap": "Bootstrap",
  "comparison-header-layercss": "LayerCSS",
  "comparison-row-modularity": "Modularity",
  "comparison-tailwind-modularity": "High",
  "comparison-bootstrap-modularity": "Medium",
  "comparison-layercss-modularity": "High",
  "comparison-row-reusability": "Reusability",
  "comparison-tailwind-reusability": "Medium",
  "comparison-bootstrap-reusability": "Low",
  "comparison-layercss-reusability": "High",
  "comparison-row-ease-of-use": "Ease of Use",
  "comparison-tailwind-ease-of-use": "Medium",
  "comparison-bootstrap-ease-of-use": "High",
  "comparison-layercss-ease-of-use": "High",
  "compiler-title": "6. Compiler Space",
  "conclusion-title": "7. Conclusion",
  "conclusion-description": "LayerCSS simplifies CSS development with advanced features like variables, nested blocks, and layers. It's ideal for both small and large projects.",
  "conclusion-note": "<em>Note from the Creator:</em> This project is in its early stages. Your contribution will be invaluable!",
  "footer-text": "&copy; 2025 LayerCSS. Distributed under the Apache 2.0 License."
}
