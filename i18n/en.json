{
  "title": "LayerCSS .lyc",
  "language-selector-label": "Select Language:",
  "header-title": "LayerCSS - Programming Language",
  "header-license": "License: Apache 2.0",
  "introduction-title": "Introduction",
  "introduction-description": "<strong>What is LayerCSS?</strong> LayerCSS is a design language based on CSS that introduces advanced features to facilitate the creation of modular, reusable, and maintainable styles.",
  "introduction-quote": "Modularity: Divide your styles into logical sections.<br>Reusability: Define values once and use them in multiple places.<br>Ease of Maintenance: Change a value in one place and affect the entire project.",
  "introduction-creator": "<em>Creator:</em> Sebastián (Balthier) Ordoñez Arias, an amateur programmer with basic knowledge in web design and application development.",
  "lyc-title": "What is .lyc?",
  "lyc-description": "The `.lyc` file format is the core of LayerCSS. It extends traditional CSS by introducing new syntax and features that make styling more intuitive and efficient.",
  "lyc-feature-syntax": "<strong>Syntax:</strong> Similar to CSS but with added features like variables, nesting, and layers.",
  "lyc-feature-modularity": "<strong>Modularity:</strong> Organize your styles into reusable components.",
  "lyc-feature-compilation": "<strong>Compilation:</strong> `.lyc` files are compiled into standard CSS for browser compatibility.",
  "features-title": "Key Features",
  "feature-global-variables": "<strong>Global and Local Variables:</strong> Define reusable values like colors and font sizes.",
  "feature-nested-blocks": "<strong>Nested Blocks:</strong> Write styles hierarchically for better readability.",
  "feature-layers": "<strong>Layers (@layer):</strong> Organize styles into logical sections.",
  "feature-comments": "<strong>Structured Comments:</strong> Use single-line and multi-line comments for documentation.",
  "feature-animations": "<strong>Animations and Keyframes:</strong> Simplify dynamic visual effects.",
  "example-title": "Detailed Example",
  "example-description": "Below is a basic example of a `.lyc` file with detailed comments explaining each part of the code. This file uses the fundamental features of LYC: <strong>global variables</strong>, <strong>`calc()`</strong>, <strong>mixins (`@mixin` and `@include`)</strong>, and <strong>inheritance with `@extend`</strong>.",
  "example-lyc-title": "LYC Code Example",
  "example-lyc-description": "Below is an example of LYC code that you can copy and paste into the compiler to test its features.",
  "comparison-title": "Comparison: .lyc vs .css",
  "comparison-characteristic": "Characteristic",
  "comparison-variables": "Variables",
  "comparison-nested-blocks": "Nested Blocks",
  "comparison-layers": "Layers",
  "comparison-comments": "Comments",
  "comparison-animations": "Animations",
  "comparison-learning-curve": "Learning Curve",
  "sass-variables": "Supported",
  "less-variables": "Supported",
  "postcss-variables": "Supported via plugins",
  "layercss-variables": "Native support",
  "sass-nested-blocks": "Supported",
  "less-nested-blocks": "Supported",
  "postcss-nested-blocks": "Supported via plugins",
  "layercss-nested-blocks": "Native support",
  "sass-layers": "Not supported",
  "less-layers": "Not supported",
  "postcss-layers": "Supported via plugins",
  "layercss-layers": "Native support",
  "sass-comments": "Standard CSS comments",
  "less-comments": "Standard CSS comments",
  "postcss-comments": "Standard CSS comments",
  "layercss-comments": "Structured comments",
  "sass-animations": "Supported",
  "less-animations": "Supported",
  "postcss-animations": "Supported via plugins",
  "layercss-animations": "Native support",
  "sass-learning-curve": "Moderate",
  "less-learning-curve": "Easy",
  "postcss-learning-curve": "Moderate",
  "layercss-learning-curve": "Easy",
  "compiler-title": "Compiler Space",
  "compile-button": "Compile",
  "code-input": "Write your LayerCSS code here...",
  "output": "CSS Output",
  "processTitle": "Current and Future Process",
  "currentProcessTitle": "Where Are We in the Process?",
  "currentProcessDescription": "So far, we have implemented a partial preprocessor or interpreter for the LYC language. This preprocessor performs the following tasks:",
  "currentProcessFeatureVars": "Variable Replacement: Processes global and local variables (using var(--name)).",
  "currentProcessFeatureMath": "Mathematical Expressions: Evaluates expressions within calc().",
  "currentProcessFeatureMixins": "Mixins (@mixin and @include): Allows code reuse through mixins.",
  "currentProcessFeatureExtend": "Inheritance with @extend: Reuses styles between selectors.",
  "currentProcessFeatureDynamic": "Dynamic Structures: Uses malloc and realloc to manage variables, mixins, and other elements dynamically.",
  "currentProcessFeatureLocalScope": "Local Scopes: Local variables are stored in a stack and do not appear in the output file.",
  "currentProcessNote": "However, this is only a partial compiler, as there are still several important stages of the compilation process yet to be implemented.",
  "compilerStagesTitle": "What Will Be Added",
  "compilerStagesDescription": "To turn our preprocessor into a complete compiler, we need to add the following features:",
  "compilerStagesSubtitle": "A. Stages of a Complete Compiler",
  "compilerStageLexing": "Lexical Analysis (Lexing): Converts source code into tokens (keywords, identifiers, operators, etc.).",
  "compilerStageParsing": "Syntactic Analysis (Parsing): Builds an Abstract Syntax Tree (AST) from the tokens generated by the lexer.",
  "compilerStageSemantic": "Semantic Analysis: Verifies that the AST is valid according to the language rules.",
  "compilerStageIntermediateCode": "Intermediate Code Generation: Translates the AST into an intermediate format that is easier to optimize or compile.",
  "compilerStageOptimization": "Optimization: Improves the intermediate code to make it more efficient.",
  "compilerStageFinalCode": "Final Code Generation: Produces the output file in the desired format (in this case, CSS).",
  "additionalFeaturesTitle": "B. Additional Features That Can Be Added",
  "additionalFeaturesDescription": "In addition to the compiler stages, we can add the following specific features for LYC:",
  "additionalFeatureFunctions": "Support for Advanced Functions: Implement custom functions in LYC, such as darken(color, percentage) or lighten(color, percentage).",
  "additionalFeatureNestedRules": "Advanced Nested Rules: Allow more complex nested CSS rules, similar to those found in SASS or LESS.",
  "additionalFeatureStrictMode": "Strict Mode: Add a strict mode that detects potential errors, such as unused variables or duplicate rules.",
  "additionalFeatureToolsIntegration": "Compatibility with External Tools: Integrate LYC with tools like PostCSS or Autoprefixer to improve browser compatibility.",
  "additionalFeatureMinification": "Automatic Minification: Add an option to automatically generate minified CSS.",
  "additionalFeatureDebugging": "Debugging: Include comments in the generated CSS to facilitate debugging.",
  "additionalFeatureDocumentation": "Documentation and Examples: Create detailed documentation for LYC and provide usage examples.",
  "conclusion-title": "Conclusion",
  "conclusion-description": "LayerCSS simplifies CSS development with advanced features like variables, nested blocks, and layers. It's ideal for both small and large projects.",
  "conclusion-note": "<em>Note from the Creator:</em> This project is in its early stages. Your contribution will be invaluable!",
  "footer-text": "&copy; 2025 LayerCSS. Distributed under the Apache 2.0 License."
}
