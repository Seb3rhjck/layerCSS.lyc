{
  "title": "LayerCSS .lyc",
  "language-selector-label": "选择语言：",
  "header-title": "LayerCSS - 编程语言",
  "header-license": "许可证：Apache 2.0",
  "introduction-title": "简介",
  "introduction-description": "<strong>什么是 LayerCSS？</strong> LayerCSS 是一种基于 CSS 的设计语言，引入了高级功能，以促进模块化、可重用和可维护样式的创建。",
  "introduction-quote": "模块化：将样式划分为逻辑部分。<br>可重用性：定义一次值并在多个地方使用。<br>易于维护：在一个地方更改值并影响整个项目。",
  "introduction-creator": "<em>创作者：</em>Sebastián (Balthier) Ordoñez Arias，一位具有基本网页设计和应用程序开发知识的业余程序员。",
  "lyc-title": "什么是 .lyc？",
  "lyc-description": "`.lyc` 文件格式是 LayerCSS 的核心。它通过引入新语法和功能扩展了传统 CSS，使样式更加直观和高效。",
  "lyc-feature-syntax": "<strong>语法：</strong>类似于 CSS，但增加了变量、嵌套和层等功能。",
  "lyc-feature-modularity": "<strong>模块化：</strong>将样式组织为可重用的组件。",
  "lyc-feature-compilation": "<strong>编译：</strong>.lyc 文件被编译为标准 CSS，以确保浏览器兼容性。",
  "features-title": "主要特性",
  "feature-global-variables": "<strong>全局和局部变量：</strong>定义可重用的值，例如颜色和字体大小。",
  "feature-nested-blocks": "<strong>嵌套块：</strong>层次化编写样式以提高可读性。",
  "feature-layers": "<strong>层 (@layer)：</strong>将样式组织为逻辑部分。",
  "feature-comments": "<strong>结构化注释：</strong>使用单行和多行注释进行文档记录。",
  "feature-animations": "<strong>动画和关键帧：</strong>简化动态视觉效果。",
  "example-title": "详细示例",
  "example-description": "以下是一个基本的 `.lyc` 文件示例，其中包含详细的注释，解释代码的每个部分。此文件使用了 LYC 的基本功能：<strong>全局变量</strong>、<strong>`calc()`</strong>、<strong>混入（`@mixin` 和 `@include`）</strong> 和 <strong>继承（`@extend`）</strong>。",
   "example-lyc-title": "LYC代码示例",
  "example-lyc-description": "以下是一个LYC代码示例，您可以将其复制并粘贴到编译器中以测试其功能。",
  "comparison-title": "比较：.lyc 与 .css",
  "comparison-characteristic": "特性",
  "comparison-variables": "变量",
  "comparison-nested-blocks": "嵌套块",
  "comparison-layers": "层",
  "comparison-comments": "注释",
  "comparison-animations": "动画",
  "comparison-learning-curve": "学习曲线",
  "sass-variables": "支持",
  "less-variables": "支持",
  "postcss-variables": "通过插件支持",
  "layercss-variables": "原生支持",
  "sass-nested-blocks": "支持",
  "less-nested-blocks": "支持",
  "postcss-nested-blocks": "通过插件支持",
  "layercss-nested-blocks": "原生支持",
  "sass-layers": "不支持",
  "less-layers": "不支持",
  "postcss-layers": "通过插件支持",
  "layercss-layers": "原生支持",
  "sass-comments": "标准 CSS 注释",
  "less-comments": "标准 CSS 注释",
  "postcss-comments": "标准 CSS 注释",
  "layercss-comments": "结构化注释",
  "sass-animations": "支持",
  "less-animations": "支持",
  "postcss-animations": "通过插件支持",
  "layercss-animations": "原生支持",
  "sass-learning-curve": "中等",
  "less-learning-curve": "简单",
  "postcss-learning-curve": "中等",
  "layercss-learning-curve": "简单",
  "compiler-title": "编译器空间",
  "compile-button": "编译",
  "code-input": "在此处编写您的 LayerCSS 代码...",
  "output": "CSS 输出",
  "process-title": "当前和未来进程",
  "current-process-title": "我们在进程中的哪个阶段？",
  "current-process-description": "到目前为止，我们已经实现了一个部分预处理器或解释器来处理LYC语言。该预处理器执行以下任务：",
  "current-process-feature-vars": "变量替换：处理全局和局部变量（使用var(--名称)）。",
  "current-process-feature-math": "数学表达式：在calc()内计算表达式。",
  "current-process-feature-mixins": "混入(@mixin和@include)：通过混入允许代码重用。",
  "current-process-feature-extend": "使用@extend继承：在选择器之间重用样式。",
  "current-process-feature-dynamic": "动态结构：使用malloc和realloc以动态方式管理变量、混入和其他元素。",
  "current-process-feature-local-scope": "局部作用域：局部变量存储在堆栈中，不会出现在输出文件中。",
  "current-process-note": "然而，这只是一个部分编译器，因为还有几个重要的编译过程阶段尚未实现。",
  "compiler-stages-title": "将添加什么",
  "compiler-stages-description": "为了将我们的预处理器变成一个完整的编译器，我们需要添加以下特性：",
  "compiler-stages-subtitle": "A. 完整编译器的阶段",
  "compiler-stage-lexing": "词法分析（Lexing）：将源代码转换为标记（关键字、标识符、运算符等）。",
  "compiler-stage-parsing": "语法分析（Parsing）：从lexer生成的标记构建抽象语法树（AST）。",
  "compiler-stage-semantic": "语义分析：验证AST是否符合语言规则。",
  "compiler-stage-intermediate-code": "中间代码生成：将AST翻译成更易于优化或编译的中间格式。",
  "compiler-stage-optimization": "优化：改进中间代码以提高效率。",
  "compiler-stage-final-code": "最终代码生成：以所需格式（在这种情况下是CSS）生成输出文件。",
  "additional-features-title": "B. 可添加的附加功能",
  "additional-features-description": "除了编译器阶段外，我们还可以为LYC添加以下特定功能：",
  "additional-feature-functions": "支持高级函数：在LYC中实现自定义函数，如darken(color, percentage)或lighten(color, percentage)。",
  "additional-feature-nested-rules": "高级嵌套规则：允许更复杂的嵌套CSS规则，类似于SASS或LESS中的规则。",
  "additional-feature-strict-mode": "严格模式：添加严格模式以检测潜在错误，例如未使用的变量或重复规则。",
  "additional-feature-tools-integration": "与外部工具兼容：将LYC与PostCSS或Autoprefixer等工具集成，以提高浏览器兼容性。",
  "additional-feature-minification": "自动压缩：添加自动生成压缩CSS的选项。",
  "additional-feature-debugging": "调试：在生成的CSS中包含注释以便于调试。",
  "additional-feature-documentation": "文档和示例：为LYC创建详细文档并提供使用示例。",
  "conclusion-title": "结论",
  "conclusion-description": "LayerCSS 使用变量、嵌套块和层等高级功能简化了 CSS 开发。它适用于小型和大型项目。",
  "conclusion-note": "<em>创作者备注：</em>该项目仍处于早期阶段。您的贡献将是无价的！",
  "footer-text": "&copy; 2025 LayerCSS. 根据 Apache 2.0 许可证分发。"
}
